		 KESLLEY LIMA DA SILVA
			(LISTA 2)

1. Siga atentamente os slides disponíveis AQUI. Experimente os comandos, ambiente-se com eles. Esclareça suas dúvidas com o professor. Faça uso de repositórios locais e, para boa parte dos comandos, terá que interagir com o GitHub (serviço sugerido na disciplina). Faça isto antes de prosseguir com os demais itens.

2. Qual o comando para que as “marcas” ou tags sejam enviadas para o repositório remoto? (um simples git push não produz este efeito)
git push origin <tag>

3.Qual o nome do branch padrão do Git?
 O nome do branch padrão no Git é master.

4. O que o comando git branch <branchname> realiza?
Cria um branch com o nome escolhido.

5. Como criar um branch a partir de um commit específico?
git branch <branchname> <commit>

6. Em um repositório, qual o efeito do comando git branch erro1234?
Cria um novo branch chamado erro1234 que ficara junto com master.

7. Qual o comando para se alternar para um branch de nome experimento2?
git checkout experimento2.

8. Em um repositório com dois branches, b1 e b2, onde b1 é o corrente, qual o efeito do comando git branch?
Quando executado git branch aparecera os dois branches b1 e b2, algo como :
$ git branch
*master
b1
b2
O '*' representa que aquele branch e o prinipal nesse exemplo master é o principal não tendo sido executado nenhum comando para que b1 ou b2 fosse o branch principal.

9. O que o comando git checkout -b novobranch faz?
Cria o novobranch e o torno como branch principal.

10. Qual a função do comando git branch -d teste?
Essa função vai excluir o branch teste.

11. Durante o desenvolvimento de um software é comum, por exemplo, utilizar um novo recurso por meio de experimentação. Talvez uma nova tecnologia, uma nova biblioteca que pode ser útil ao que está em desenvolvimento, ou até mesmo uma nova versão de um produto já empregado. Para que o uso deste novo recurso não interfira com o que é considerado pronto, um branch pode ser criado para a experimentação. Código que for criado para a experimentação existirá apenas no branch criado. Se eventualmente o experimento demonstrar um resultado satisfatório, as alterações realizadas no branch poderão ser incorporadas no que é considerado pronto, ou seja, no branch principal (master). Esta última ação é conhecida por merge. Neste item, apresente uma sequência de comandos que simula um caso simples de criação e uso seguido de merge empregando um branch para ilustrar uma experimentação conforme acima. A sequência deve incluir, obrigatoriamente: (a) criação de um ou mais branches; (b) chaveamento para pelo menos dois branches e (c) merge. Para simular alteração em um arquivo, basta simplesmente fornecer algo como Arquivo <nome> é alterado. O que foi fornecido em negrito representa uma ação que altera um arquivo cujo nome é fornecido entre o sinal de menor e o de maior.
$ git branch X
$ git checkout X
$ git checkout master 
$ Switched to branch "master"
$ git checkout -b 'Correcao
$' Switched to a new branch "correcao"
$ vim index.html 
$ git commit -a -m 'correçao obteve exito'
$ git checkout master 
$ git merge correcao
$ git branch -d correcao
$ git checkout master 
$ git merge X

